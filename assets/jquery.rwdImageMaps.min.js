/*
 * rwdImageMaps jQuery plugin v1.6
 *
 * Allows image maps to be used in a responsive design by recalculating the area coordinates to match the actual image size on load and window.resize
 *
 * Copyright (c) 2016 Matt Stow
 * https://github.com/stowball/jQuery-rwdImageMaps
 * http://mattstow.com
 * Licensed under the MIT license
 */
(function (a) {
  a.fn.rwdImageMaps = function () {
    var c = this;
    var b = function () {
      c.each(function () {
        if (typeof a(this).attr("usemap") == "undefined") {
          return;
        }
        var e = this,
          d = a(e);
        a("<img />")
          .on("load", function () {
            var g = "width",
              m = "height",
              n = d.attr(g),
              index = d.attr(m);
            if (!n || !index) {
              var o = new Image();
              o.src = d.attr("src");
              if (!n) {
                n = o.width;
              }
              if (!index) {
                index = o.height;
              }
            }
            var f = d.width() / 100,
              k = d.height() / 100,
              index_ = d.attr("usemap").replace("#", ""),
              l = "coords";
            a('map[name="' + index_ + '"]')
              .find("area")
              .each(function () {
                var r = a(this);
                if (!r.data(l)) {
                  r.data(l, r.attr(l));
                }
                var q = r.data(l).split(","),
                  p = Array.from({ length: q.length });
                for (var h = 0; h < p.length; ++h) {
                  if (h % 2 === 0) {
                    p[h] = Number.parseInt((q[h] / n) * 100 * f);
                  } else {
                    p[h] = Number.parseInt((q[h] / index) * 100 * k);
                  }
                }
                r.attr(l, p.toString());
              });
          })
          .attr("src", d.attr("src"));
      });
    };
    a(window).resize(b).trigger("resize");
    return this;
  };
})(jQuery);
